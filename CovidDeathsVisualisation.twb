<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='DataVisualisation_16552953039990' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='PortfolioProj' inline='true' name='federated.1f6ba640z1346q17nyczt1rom21j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='JARVIS\SQLEXPRESS' name='sqlserver.09d9ubo0w766nm11pan630htg3ze'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProj' odbc-native-protocol='yes' one-time-sql='' server='JARVIS\SQLEXPRESS' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='Union' type='union'>
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='DeathsByContinent' table='[dbo].[DeathsByContinent]' type='table' />
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='DeathsvsCases' table='[dbo].[DeathsvsCases]' type='table' />
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='InfecrtionCount' table='[dbo].[InfecrtionCount]' type='table' />
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='InfectionPercentage' table='[dbo].[InfectionPercentage]' type='table' />
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='PercentPopulationVaccinated' table='[dbo].[PercentPopulationVaccinated]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='Union' type='union'>
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='DeathsByContinent' table='[dbo].[DeathsByContinent]' type='table' />
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='DeathsvsCases' table='[dbo].[DeathsvsCases]' type='table' />
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='InfecrtionCount' table='[dbo].[InfecrtionCount]' type='table' />
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='InfectionPercentage' table='[dbo].[InfectionPercentage]' type='table' />
          <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='PercentPopulationVaccinated' table='[dbo].[PercentPopulationVaccinated]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RollingPeopleVaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RollingPeopleVaccinated]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>RollingPeopleVaccinated</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[RollingPeopleVaccinated]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[Table Name]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Union' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[_CB64FFFC6F294FFA87FA3CB485E9DA7C]' role='measure' type='quantitative' />
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[new_vaccinations]' role='dimension' type='nominal' />
      <column-instance column='[PercentPopulationInfected]' derivation='Attribute' name='[attr:PercentPopulationInfected:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='date' role='measures'>
        <folder-item name='[HighestInfectionCount]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='date'>
          <folder-item name='[HighestInfectionCount]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/DA/Tableau proj/air qual/PortfolioProj.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/15/2022 12:13:32 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='PortfolioProj' increment-value='%null%' refresh-type='create' rows-inserted='376599' timestamp-start='2022-06-15 12:13:29.647' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>2</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>3</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>5</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>279</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>6</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51747</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>7</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>88173</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>8</ordinal>
              <family>Union</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3224</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_CB64FFFC6F294FFA87FA3CB485E9DA7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:PercentPopulationInfected:ok]' type='palette'>
            <map to='#499894'>
              <bucket>15.365670099600079</bucket>
            </map>
            <map to='#499894'>
              <bucket>108.98265259713114</bucket>
            </map>
            <map to='#499894'>
              <bucket>235.30266550188605</bucket>
            </map>
            <map to='#499894'>
              <bucket>562.72041716098977</bucket>
            </map>
            <map to='#499894'>
              <bucket>1372.8821982313243</bucket>
            </map>
            <map to='#499894'>
              <bucket>2314.7114508919763</bucket>
            </map>
            <map to='#499894'>
              <bucket>3140.0297127764957</bucket>
            </map>
            <map to='#499894'>
              <bucket>3905.9219836261932</bucket>
            </map>
            <map to='#499894'>
              <bucket>5358.095772667758</bucket>
            </map>
            <map to='#499894'>
              <bucket>6755.3217311099816</bucket>
            </map>
            <map to='#499894'>
              <bucket>9319.5472486725466</bucket>
            </map>
            <map to='#499894'>
              <bucket>15623.543708146957</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>76.157034706603866</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>185.65321623778027</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>377.74153033643364</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1010.2676999989819</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1925.5236609675076</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2724.1213151927432</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>3506.7304118368002</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4937.5702593432543</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>6105.2033763816644</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>8366.9159892111074</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11023.751860232847</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>7.3409265922529361</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>95.163090659582281</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>204.96228895223345</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>471.14323048685316</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1236.2390913967911</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2098.7597623776596</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2910.1550965700376</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3796.7076603841183</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5121.9347470479706</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6612.5104375377605</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>9110.8355189046051</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>11958.913047068696</bucket>
            </map>
            <map to='#79706e'>
              <bucket>40.83472759135794</bucket>
            </map>
            <map to='#79706e'>
              <bucket>128.07582621661402</bucket>
            </map>
            <map to='#79706e'>
              <bucket>277.7545047238508</bucket>
            </map>
            <map to='#79706e'>
              <bucket>760.82995658538118</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1586.4863611260421</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2477.799282314812</bucket>
            </map>
            <map to='#79706e'>
              <bucket>3279.5213778635225</bucket>
            </map>
            <map to='#79706e'>
              <bucket>4427.6137611745226</bucket>
            </map>
            <map to='#79706e'>
              <bucket>5487.0948335519497</bucket>
            </map>
            <map to='#79706e'>
              <bucket>7197.3387191195379</bucket>
            </map>
            <map to='#79706e'>
              <bucket>9777.4702155467712</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>18.772047388750323</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>113.70604269758584</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>237.03598982877398</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>680.92329172389748</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1379.0002007628993</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2318.6512531281464</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>3163.7505768223255</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>4141.8444687953934</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>5383.9266075157084</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>6880.0101214574852</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9383.0449103361661</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>9.247684388440641</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>97.834684914071019</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>209.44853395275305</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>475.96915906092289</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1244.9933266455628</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2121.37441654843</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2939.0087302274524</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>3799.5828380166572</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5165.9975015385153</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6674.2627007373003</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>9115.8901386428734</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>12676.164833747571</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>62.630725614308474</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>167.30589637612954</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>323.37380960226739</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>943.66933506768828</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1858.418965206431</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2626.5000672698643</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>3467.9359669049627</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>4926.8252276690591</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>5760.0153388071903</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>7793.3648025789516</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10523.313151154291</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.00012361395439301791</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>80.443312102742382</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>188.38443571034861</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>428.67982098841679</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1067.2357737431505</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1982.8573597561879</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2852.5365950600244</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>3579.4046134663345</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>4941.1028399530742</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>6168.0311618388168</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>8746.1704591592479</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11322.128521347215</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>56.228108987129467</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>158.32836455355704</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>317.78553064783483</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>935.26441145394779</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1776.7789633848965</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2618.6886696456204</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3442.8958289372022</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>4693.2053926615217</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>5652.0067193867662</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>7592.4308271159953</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10428.649380245635</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>13.790934007136869</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>103.51055637094503</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>227.98493690684731</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>498.81041209003644</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1296.312853034033</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2181.8176644661967</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3061.1212770831899</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>3868.2759120516739</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5199.4642511310412</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6699.3697939762869</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>9195.4576726389641</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>13124.12819758896</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>44.040141780047975</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>128.46213349048296</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>292.91999909999964</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>807.51037383265157</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1659.8793560004228</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2489.0302675648227</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3306.3466841869235</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>4582.382506179456</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>5508.9378546594507</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>7204.7706760113342</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>9790.2103608300986</bucket>
            </map>
            <map to='#d37295'>
              <bucket>50.903780659928124</bucket>
            </map>
            <map to='#d37295'>
              <bucket>139.95543373427245</bucket>
            </map>
            <map to='#d37295'>
              <bucket>299.43028315060712</bucket>
            </map>
            <map to='#d37295'>
              <bucket>812.32540923430565</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1697.0519768406302</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2498.0181334412623</bucket>
            </map>
            <map to='#d37295'>
              <bucket>3359.6770082591752</bucket>
            </map>
            <map to='#d37295'>
              <bucket>4651.4781006906969</bucket>
            </map>
            <map to='#d37295'>
              <bucket>5517.2369156865952</bucket>
            </map>
            <map to='#d37295'>
              <bucket>7422.9566061858186</bucket>
            </map>
            <map to='#d37295'>
              <bucket>9800.2938569895905</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>57.78742827969166</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>160.09053767975237</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>319.32440168948409</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>936.24775638566985</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1795.6142575460174</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2620.2099372716721</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>3462.2138779582128</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>4872.4033527857518</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>5703.9107476738182</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>7789.7559231809219</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10476.645635561303</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>64.705626700082718</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>171.03810983929466</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>364.92125669517941</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>999.37379595378172</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1901.1970380853959</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2685.8266238522347</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>3491.432522400763</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>4929.0038877934339</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>6026.4522020700961</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>8317.7041078149068</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10703.232571304987</bucket>
            </map>
            <map to='#e15759'>
              <bucket>34.354569063672798</bucket>
            </map>
            <map to='#e15759'>
              <bucket>123.43421067346547</bucket>
            </map>
            <map to='#e15759'>
              <bucket>247.39461921661226</bucket>
            </map>
            <map to='#e15759'>
              <bucket>707.33367197638847</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1421.4520649666945</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2321.6603465139187</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3196.1488508581388</bucket>
            </map>
            <map to='#e15759'>
              <bucket>4329.5664013406049</bucket>
            </map>
            <map to='#e15759'>
              <bucket>5470.5097061304305</bucket>
            </map>
            <map to='#e15759'>
              <bucket>7114.0502606512109</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9523.0401757899399</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>15.153415269941563</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>107.72325089426471</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>233.55131642541937</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>534.96143614547452</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1302.5458973436159</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2290.7329678620235</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3116.7144495464495</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>3901.4694518039623</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>5234.0668861549129</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6749.6072126061945</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>9276.0755367639977</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>13476.809830518523</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3.8629360747818073e-06</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1.1397359253365458</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>90.285404630206585</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>192.14536481123437</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>461.56489171538362</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1101.9983968937099</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2055.120450903145</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2895.9096129068075</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3703.1996739639171</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>5024.5664311176934</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>6335.793384330721</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>8792.5613110235099</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11520.652107976941</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>55.569635662140492</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>145.36000505765227</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>316.17615278640676</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>917.79049627436575</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1764.8339875162067</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2554.0163088515606</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>3433.7012614978289</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>4670.5737663160598</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>5517.8871323745007</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>7437.3831319551446</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10014.600796776289</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>39.474979491386378</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>125.52119370801569</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>250.67886210477388</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>742.40607770226984</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1522.6150676815869</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2344.2118226601183</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3262.5123447062729</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>4336.7801771065624</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>5481.9409723931694</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>7193.5299678578112</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>9757.162300519507</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5.701298265624505</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>92.192310126314254</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>192.35663791537525</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>468.26320121614907</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1210.6109799046881</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2077.5154618789575</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2903.1956886583935</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3751.1933884297468</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>5045.2489853765383</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>6483.1894316063026</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>8800.6210682980127</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>11948.328517075148</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#c53241'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d14544'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#e96949'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f27b4a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f6bb58'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f9a550'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' palette='sf_dark' type='palette'>
            <map to='#067d77'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#0e70c7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#26aba4'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#3296ed'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#7719e3'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#9d53f2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#2ca02c'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9467bd'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#98df8a'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#aec7e8'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c5b0d5'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d62728'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff7f0e'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9896'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbb78'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Union' id='_CB64FFFC6F294FFA87FA3CB485E9DA7C'>
            <properties context=''>
              <relation all='true' name='Union' type='union'>
                <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='DeathsByContinent' table='[dbo].[DeathsByContinent]' type='table' />
                <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='DeathsvsCases' table='[dbo].[DeathsvsCases]' type='table' />
                <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='InfecrtionCount' table='[dbo].[InfecrtionCount]' type='table' />
                <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='InfectionPercentage' table='[dbo].[InfectionPercentage]' type='table' />
                <relation connection='sqlserver.09d9ubo0w766nm11pan630htg3ze' name='PercentPopulationVaccinated' table='[dbo].[PercentPopulationVaccinated]' type='table' />
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_C9A896E49CFE4A19B5F5312E8E4647BA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location,Forecast Indicator' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Deaths by continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths By Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PortfolioProj' name='federated.1f6ba640z1346q17nyczt1rom21j' />
          </datasources>
          <datasource-dependencies datasource='federated.1f6ba640z1346q17nyczt1rom21j'>
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]' value='93' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1f6ba640z1346q17nyczt1rom21j].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{5FFD4264-53EC-4914-BD5E-AA9696ACEC66}' />
    </worksheet>
    <worksheet name='Global Numbers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PortfolioProj' name='federated.1f6ba640z1346q17nyczt1rom21j' />
          </datasources>
          <datasource-dependencies datasource='federated.1f6ba640z1346q17nyczt1rom21j'>
            <column datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1f6ba640z1346q17nyczt1rom21j].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1f6ba640z1346q17nyczt1rom21j].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1f6ba640z1346q17nyczt1rom21j].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1f6ba640z1346q17nyczt1rom21j].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1f6ba640z1346q17nyczt1rom21j].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1f6ba640z1346q17nyczt1rom21j].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1f6ba640z1346q17nyczt1rom21j].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1f6ba640z1346q17nyczt1rom21j].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1f6ba640z1346q17nyczt1rom21j].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1f6ba640z1346q17nyczt1rom21j].[:Measure Names]' value='112' />
            <format attr='height' value='56' />
            <format attr='text-format' field='[federated.1f6ba640z1346q17nyczt1rom21j].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1f6ba640z1346q17nyczt1rom21j].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#d4d4d4' />
            <format attr='background-color' scope='cols' value='#b4b4b4' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f2f2f2' />
            <format attr='background-color' data-class='subtotal' scope='rows' value='#00000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#f5eddc' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1f6ba640z1346q17nyczt1rom21j].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.3733149766921997' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1f6ba640z1346q17nyczt1rom21j].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{737FE465-C37E-4086-94FC-6728F76B1FEF}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PortfolioProj' name='federated.1f6ba640z1346q17nyczt1rom21j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1f6ba640z1346q17nyczt1rom21j'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='None' name='[none:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:PercentPopulationInfected:qk]' included-values='in-range'>
            <min>6.0048292938871697e-08</min>
            <max>70.654190365523007</max>
          </filter>
          <slices>
            <column>[federated.1f6ba640z1346q17nyczt1rom21j].[none:PercentPopulationInfected:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1f6ba640z1346q17nyczt1rom21j].[Longitude (generated)]' field-type='quantitative' max='13654713.806868158' min='-6187727.1578365602' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1f6ba640z1346q17nyczt1rom21j].[Latitude (generated)]' field-type='quantitative' max='16815750.791309897' min='101412.57120161317' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1f6ba640z1346q17nyczt1rom21j].[sum:PercentPopulationInfected:qk]' num-steps='9' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1f6ba640z1346q17nyczt1rom21j].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]' />
              <geometry column='[federated.1f6ba640z1346q17nyczt1rom21j].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1f6ba640z1346q17nyczt1rom21j].[Latitude (generated)]</rows>
        <cols>[federated.1f6ba640z1346q17nyczt1rom21j].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{78A6F17E-E394-44C8-BA07-B471016D7A30}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='18'>Countries with Most number of Infected People over the pandemic</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PortfolioProj' name='federated.1f6ba640z1346q17nyczt1rom21j' />
          </datasources>
          <datasource-dependencies datasource='federated.1f6ba640z1346q17nyczt1rom21j'>
            <column datatype='real' name='[HighestInfectionCount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[HighestInfectionCount]' derivation='Sum' forecast-column-base='[sum:HighestInfectionCount:qk]' forecast-column-type='forecast-value' name='[fVal:sum:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[HighestInfectionCount]' derivation='None' name='[none:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[HighestInfectionCount]' derivation='Sum' name='[sum:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:HighestInfectionCount:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([HighestInfectionCount])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Location:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Location:nk]' member='%null%' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;European Union&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;High income&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;Low income&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;Lower middle income&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;Upper middle income&quot;' />
                    <groupfilter function='member' level='[none:Location:nk]' member='&quot;World&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]' direction='ASC' using='[federated.1f6ba640z1346q17nyczt1rom21j].[sum:HighestInfectionCount:qk]' />
          <filter class='quantitative' column='[federated.1f6ba640z1346q17nyczt1rom21j].[tdy:date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]</column>
            <column>[federated.1f6ba640z1346q17nyczt1rom21j].[none:HighestInfectionCount:qk]</column>
            <column>[federated.1f6ba640z1346q17nyczt1rom21j].[tdy:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]' />
              <color column='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1f6ba640z1346q17nyczt1rom21j].[fVal:sum:HighestInfectionCount:qk]</rows>
        <cols>[federated.1f6ba640z1346q17nyczt1rom21j].[tdy:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Month-Trunc' range-size='7' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A4D55D3C-CFF4-48E9-BBC9-3B14D3DD1C47}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='51250' id='16' is-fixed='true' type-v2='layout-basic' w='98400' x='800' y='1000'>
            <zone h='51250' id='8' param='horz' type-v2='layout-flow' w='87300' x='800' y='1000'>
              <zone h='51250' id='6' type-v2='layout-basic' w='87300' x='800' y='1000'>
                <zone h='36970' id='5' name='Deaths by continent' w='43861' x='800' y='15280'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='51250' id='10' name='Sheet 3' w='43439' x='44661' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='14280' id='15' name='Global Numbers' w='43861' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone h='51250' id='17' param='horz' type-v2='layout-flow' w='11100' x='88100' y='1000'>
              <zone fixed-size='160' h='51250' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='11100' x='88100' y='1000'>
                <zone h='18250' id='9' name='Deaths by continent' pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]' type-v2='color' w='11100' x='88100' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='69' h='9625' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11100' x='88100' y='19250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='46750' id='12' name='Sheet 4' w='87300' x='800' y='52250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='46750' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]&#10;[federated.1f6ba640z1346q17nyczt1rom21j].[none:Forecast Indicator:nk]' type-v2='color' w='11100' x='88100' y='52250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='22' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='106' h='14280' id='15' is-fixed='true' name='Global Numbers' w='43861' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51250' id='10' is-fixed='true' name='Sheet 3' w='43439' x='44661' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='69' h='9625' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[sum:PercentPopulationInfected:qk]' type-v2='color' w='11100' x='88100' y='19250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36970' id='5' is-fixed='true' name='Deaths by continent' w='43861' x='800' y='15280'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18250' id='9' name='Deaths by continent' pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]' type-v2='color' w='11100' x='88100' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46750' id='12' is-fixed='true' name='Sheet 4' w='87300' x='800' y='52250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='46750' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]&#10;[federated.1f6ba640z1346q17nyczt1rom21j].[none:Forecast Indicator:nk]' type-v2='color' w='11100' x='88100' y='52250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9ECA3601-6A09-41AE-8026-EC13EB409364}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Global Numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[:Measure Names]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[none:total_cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37344311-DB06-44B9-BD74-2EF618A3020F}' />
    </window>
    <window class='worksheet' name='Deaths by continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[none:location:nk]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C32D1E4E-6913-47C4-A579-9284948AC309}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[none:PercentPopulationInfected:qk]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0589366B-545C-465D-8E77-3B05D1A21942}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='119'>
            <card pane-specification-id='0' param='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]&#10;[federated.1f6ba640z1346q17nyczt1rom21j].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[my:date:ok]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[none:Forecast Indicator:nk]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[none:continent:nk]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[tmn:date:qk]</field>
            <field>[federated.1f6ba640z1346q17nyczt1rom21j].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{077879DD-1253-483E-817C-0DA93BA3D03A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Deaths by continent'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Numbers' />
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.1f6ba640z1346q17nyczt1rom21j].[none:Location:nk]&#10;[federated.1f6ba640z1346q17nyczt1rom21j].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8EF66DE1-0F7A-4156-AC6C-E7F2C68D1919}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      rxnEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deaths by continent' width='192'>
      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
    </thumbnail>
    <thumbnail height='80' name='Global Numbers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
